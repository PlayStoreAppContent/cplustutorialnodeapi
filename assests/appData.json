{
   "concepts":[
      {
         "id":"1",
         "nameOfTopic":"C++ Overview",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Overview of C++ Programming Language"
         ],
         "imageUrl":"concept-1.jpg",
         "content":[
            "C++ was developed by Bjarne Stroustrup in the 1980 at Bell Labs.",
            "The name C++ comes from the C increment operator ++, which adds 1 to the value of a variable.",
            "The C++ is an extensive version of language C.",
            "Every C program can be consider as C++ Program but reverse is not true.",
            "C++ supports for the Structured programming and also it fully supports OOPS. ( Encapsulation, Data hiding, Inheritance, Polymorphism )",
            "C++ is also called as “C with classes“.",
            "C++ is first popular object oriented programming language.",
            "C++ is further modified and standardize to “ANSI” version nearly in 2000",
            "C++ is a Statically typed, Free-form, Multi-paradigm, Compiled, General-purpose programming language, Intermediate-level language,",
            "Most of the C++ concepts are considered as basic concepts for “Java Programming“."
         ]
      },
      {
         "id":"2",
         "nameOfTopic":"Object Oriented Programming in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Object Oriented programming is a programming style that is associated with the concept of Class, Objects and various other concepts revolving around these two, like Inheritance, Polymorphism, Abstraction, Encapsulation etc."
         ],
         "imageUrl":"concept-2.jpg",
         "content":[
            "<b>Class</b> - Here we can take Human Being as a class. A class is a blueprint for any functional entity which defines its properties and its functions. Like Human Being, having body parts, and performing various actions."
         ]
      },
      {
         "id":"3",
         "nameOfTopic":"Basic Concepts of C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "In this section we will cover the basics of C++, it will include the syntax, variable, operators, loop types, pointers, references and information about other requirements of a C++ program."
         ],
         "imageUrl":"concept-3.jpg",
         "content":[
            "The syntax and structure of C++ program are :- ",
            "<b>Header files</b> - They are included at the beginning just like in C program. Here iostream is a header file which provides us with input & output streams. Header files contained predeclared function libraries, which can be used by users for their ease.",
            "<b>Using namespace std,</b> - tells the compiler to use standard namespace. Namespace collects identifiers used for class, object and variables. NameSpace can be used by two ways in a program, either by the use of using statement at the beginning, like we did in above mentioned program or by using name of namespace as prefix before the identifier with scope resolution (::) operator.",
            "<b>main(),</b> - is the function which holds the executing part of program its return type is int.",
            "<b>cin & cout</b> - cout <<, is used to print anything on screen, same as printf in C language. cin and cout are same as scanf and printf, only difference is that you do not need to mention format specifiers like, %d for int etc, in cout & cin.",
            "<b>Comments</b> - For single line comments, use // before mentioning comment. For multiple line comment, enclose the comment between /* and */",
            "<b>Creating Classes in C++</b> - <p>Classes name must start with capital letter, and they contain data variables and member functions.</p><p>Once a class is defined, then its object is created and the member functions are used.</p><p>Variables can be declared anywhere in the entire program, but must be declared, before they are used. Hence, we don't need to declare variable at the start of the program.</p><p>Don't worry this is just to give you a basic idea about C++ language, we will cover everything in details in next tutorials.</p>"
         ]
      },
      {
         "id":"4",
         "nameOfTopic":"Datatypes and Modifiers in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Datatypes and Modifiers in C++ are used to define type of variables and contents used."
         ],
         "imageUrl":"concept-4.jpg",
         "content":[
            "Data types define the way you use storage in the programs you write. Data types can be of two types: <p>1. Built-in Datatypes.</p><p>2. User-defined or Abstract Datatypes.</p>",
            "<b>Built-in Data Types</b> - These are the datatypes which are predefined and are wired directly into the compiler. For eg: int, char etc.",
            "<b>User defined or Abstract data types</b> - These are the type, that user creates as a class or a structure. In C++ these are classes where as in C language user-defined datatypes were implemented as structures.",
            "<b>Basic Built in Datatypes in C++</b> - <p><b>char</b> => for character storage (1 byte)</p><p><b>int</b> => for integral number (2 bytes)</p><p><b>float</b> => single precision floating point (4 bytes)</p><p><b>double</b> => double precision floating point numbers (8 bytes)</p>",
            "<b>Other Built in Datatypes in C++</b> - <p><b>bool</b> => Boolean (True or False)</p><p><b>void</b> => Without any Value</p><p><b>wchar_t</b> => Wide Character</p>",
            "<b>Enum as Datatype in C++</b> - Enumerated type declares a new type-name along with a sequence of values containing identifiers which has values starting from 0 and incrementing by 1 every time.",
            "<b>Modifiers in C++</b> - <p>In C++, special words(called modifiers) can be used to modify the meaning of the predefined built-in data types and expand them to a much larger set. There are four datatype modifiers in C++, they are:</p><p>1. long</p><p>2. short</p><p>3. signed</p><p>4. unsigned</p><p>* The above mentioned modifiers can be used along with built in datatypes to make them more precise and even expand their range.</p><p>* Below mentioned are some important points you must know about the modifiers :-</p><p>* <b>long</b> and <b>short</b> modify the maximum and minimum values that a data type will hold.</p><p>* A plain int must have a minimum size of <b>short.</b></p><p>* Size hierarchy : short int < int < long int</p><p>* Size hierarchy for floating point numbers is : float < double < long double</p><p>* long float is not a legal type and there are no <b>short floating point</b> numbers.</p><p>* <b>Signed</b> types includes both positive and negative numbers and is the default type.</p><p>* <b>Unsigned,</b> numbers are always without any sign, that is always positive.</p>"
         ]
      },
      {
         "id":"5",
         "nameOfTopic":"Variables in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Variable are used in C++, where we need storage for any value, which will change in program. Variable can be declared in multiple ways each with different memory requirements and functioning. Variable is the name of memory location allocated by the compiler depending upon the datatype of the variable."
         ],
         "imageUrl":"concept-5.jpg",
         "content":[
            "<b>Basic types of Variables</b> - <p>Each variable while declaration must be given a datatype, on which the memory assigned to the variable depends. Following are the basic types of variables,</p><p><b>bool</b> => For variable to store boolean values( True or False )</p><p><b>char</b> => For variables to store character types.</p><p><b>int</b> => for variable with integral values.for variable with integral values</p><p><b>float & double</b> =>  Are also types for variables with large and floating point values.</p>",
            "<b>Declaration and Initialization</b> - Variable must be declared before they are used. Usually it is preferred to declare them at the starting of the program, but in C++ they can be declared in the middle of program too, but must be done before using them.",
            "<b>Scope of Variables</b> - All the variables have their area of functioning, and out of that boundary they don't hold their value, this boundary is called scope of the variable. For most of the cases its between the curly braces,in which variable is declared that a variable exists, not outside it. We will study the storage classes later, but as of now, we can broadly divide variables into two main types.<p>* Global Variables</p><p>* Local variables</p>",
            "<b>Global variables</b> - Global variables are those, which ar once declared and can be used throughout the lifetime of the program by any class or any function. They must be declared outside the main() function. If only declared, they can be assigned different values at different time in program lifetime. But even if they are declared and initialized at the same time outside the main() function, then also they can be assigned any value at any point in the program.<p>For example: Only declared, not initialized</p><p>#include <iostream></p><p>using namespace std;</p><p>int x;                // Global variable declared</p><p>int main()</p><p>{</p><p>    x=10;                 // Initialized once</p><p>    cout <<\"first value of x = \"<< x;</p><p>    x=20;                 // Initialized again</p><p>    cout <<\"Initialized again with value = \"<< x;</p><p>}</p>",
            "<b>Local Variables</b> - Local variables are the variables which exist only between the curly braces, in which its declared. Outside that they are unavailable and leads to compile time error.<p>Example :</p><p>#include <iostream></p><p>using namespace std;</p><p>int main()</p><p>{</p><p>    int i=10;</p><p>    if(i<20)        // if condition scope starts</p><p>    {</p><p>        int n=100;   // Local variable declared and initialized</p><p>    }              // if condition scope ends</p><p>    cout << n;      // Compile time error, n not available here</p><p>}</p>",
            "<b>Some special types of variable</b> - There are also some special keywords, to impart unique characteristics to the variables in the program. Following two are mostly used, we will discuss them in details later.<p>1. Final - Once initialized, its value cant be changed.</p><p>2. Static - These variables holds their value between function calls.</p><p>Example :</p><p>#include <iostream.h></p><p>using namespace std;</p><p>int main()</p><p>{</p><p>    final int i=10;</p><p>    static int y=20;</p><p>}</p>"
         ]
      },
      {
         "id":"6",
         "nameOfTopic":"Operators in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Operators are special type of functions, that takes one or more arguments and produces a new value. For example : addition (+), substraction (-), multiplication (*) etc, are all operators. Operators are used to perform various operations on variables and constants."
         ],
         "imageUrl":"concept-6.jpg",
         "content":[
            "Types of operators are as follows :- <p>1. Assignment Operator</p><p>2. Mathematical Operators</p><p>3. Relational Operators</p><p>4. Logical Operators</p><p>5. Bitwise Operators</p><p>6. Shift Operators</p><p>7. Unary Operators</p><p>8. Ternary Operator</p><p>9. Comma Operator</p>",
            "<b>Assignment Operator (=)</b> - Operates '=' is used for assignment, it takes the right-hand side (called rvalue) and copy it into the left-hand side (called lvalue). Assignment operator is the only operator which can be overloaded but cannot be inherited.",
            "<b>Mathematical Operators</b> - There are operators used to perform basic mathematical operations. Addition (+) , subtraction (-) , diversion (/) multiplication (*) and modulus (%) are the basic mathematical operators. Modulus operator cannot be used with floating-point numbers.",
            "<b>Relational Operators</b> - These operators establish a relationship between operands. The relational operators are : less than (<) , grater thatn (>) , less than or equal to (<=), greater than equal to (>=), equivalent (==) and not equivalent (!=).",
            "<b>Logical Operators</b> - <p>The logical operators are AND (&&) and OR (||). They are used to combine two different expressions together.</p><p>If two statement are connected using AND operator, the validity of both statements will be considered, but if they are connected using OR operator, then either one of them must be valid. These operators are mostly used in loops (especially while loop) and in Decision making.</p>",
            "<b>Bitwise Operators</b> - <p>There are used to change individual bits into a number. They work with only integral data types like char, int and long and not with floating point values.</p><p>* Bitwise AND operators &</p><p>* Bitwise OR operator |</p><p>* And bitwise XOR operator ^</p><p>* And, bitwise NOT operator ~</p><p>They can be used as shorthand notation too, & = , |= , ^= , ~= etc.</p>",
            "<b>Shift Operators</b> - <p>Shift Operators are used to shift Bits of any variable. It is of three types,</p><p>1. Left Shift Operator <<</p><p>2. Right Shift Operator >></p><p>3. Unsigned Right Shift Operator >>></p>",
            "<b>Unary Operators</b> - <p>These are the operators which work on only one operand. There are many unary operators, but increment ++ and decrement -- operators are most used.</p><p>Other Unary Operators : address of &, dereference *, new and delete, bitwise not ~, logical not !, unary minus - and unary plus +.</p>",
            "<b>Ternary Operator</b> - The ternary if-else ? : is an operator which has three operands.",
            "<b>Comma Operator</b> - This is used to separate variable names and to separate expressions. In case of expressions, the value of last expression is produced and used."
         ]
      },
      {
         "id":"7",
         "nameOfTopic":"sizeof and typedef Operators in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "In this tutorial we will cover the usage of sizeof and typedef operators in C++."
         ],
         "imageUrl":null,
         "content":[
            "<b>sizeof Operator in C++</b> - <p>sizeof is also an operator not a function, it is used to get information about the amount of memory allocated for data types & Objects. It can be used to get size of user defined data types too.</p><p>sizeof operator can be used with and without parentheses. If you apply it to a variable you can use it without parentheses.</p><p>cout << sizeof(double);   //Will print size of double</p><p>int x = 2;</p><p>int i = sizeof x;</p>",
            "<b>typedef Operator in C++</b> - <p>typedef is a keyword used in C language to assign alternative names to existing types. Its mostly used with user defined data types, when names of data types get slightly complicated. Following is the general syntax for using typedef,</p><p>typedef existing_name alias_name</p><p>Lets take an example and see how typedef actually works.</p><p>typedef unsigned long ulong;</p><p>The above statement define a term ulong for an unsigned long type. Now this ulong identifier can be used to define unsigned long type variables.</p><p>ulong i, j;</p>"
         ]
      },
      {
         "id":"8",
         "nameOfTopic":"Decision making in C++ - if, else and else if in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Decision making is about deciding the order of execution of statements based on certain conditions or repeat a group of statements until certain specified conditions are met."
         ],
         "imageUrl":"concept-8.jpg",
         "content":[
            "C++ handles decision-making by supporting the following statements.<p>* if statement</p><p>* switch statement</p><p>* conditional operator statement</p><p>* goto statement</p>",
            "<b>Decision making with if statement</b> - <p>The if statement may be implemented in different forms depending on the complexity of conditions to be tested. The different forms are,</p><p>1. Simple if statement</p><p>2. if....else statement</p><p>3. Nested if....else statement</p><p>4. else if statement</p>",
            "<b>Simple if statement</b> - <p>The general form of a simple if statement is,</p><p>if(expression)</p><p>{</p><p>    statement-inside;</p><p>}</p><p>    statement-outside;</p><p>If the expression is true, then 'statement-inside' will be executed, otherwise 'statement-inside' is skipped and only 'statement-outside' will be executed.</p><p>Example:</p><p>#include< iostream.h></p><p>int main( )</p><p>{</p><p>    int x,y;</p><p>    x=15;</p><p>    y=13;</p><p>    if (x > y )</p><p>    {</p><p>        cout << \"x is greater than y\";</p><p>    }</p><p>}</p><p>Output</p><p>x is greater than y</p>",
            "<b>if...else statement</b> - <p>The general form of a simple if...else statement is,</p><p>if(expression)</p><p>{</p><p>    statement-block1;</p><p>}</p><p>else</p><p>{</p><p></p><p>    statement-block2;</p><p>}</p><p>If the 'expression' is true or returns true, then the 'statement-block1' will get executed, else 'statement-block1' will be skipped and 'statement-block2' will be executed.</p><p>Example:</p><p>void main( )</p><p>{</p><p>    int x,y;</p><p>    x=15;</p><p>    y=18;</p><p>    if (x > y )</p><p>    {</p><p>        cout << \"x is greater than y\";</p><p>    }</p><p>    else</p><p>    {</p><p>        cout << \"y is greater than x\";</p><p>    }</p><p>}</p><p>Output :-</p><p>y is greater than x</p>",
            "<b>Nested if....else statement</b> - <p>The general form of a nested if...else statement is,</p><p>if(expression)</p><p>{</p><p>    if(expression1)</p><p>    {</p><p>        statement-block1;</p><p>    }</p><p>    else </p><p>    {</p><p>        statement-block2;</p><p>    }</p><p>}</p><p>else</p><p>{</p><p>    statement-block3;</p><p>}</p><p>if 'expression' is false or returns false, then the 'statement-block3' will be executed, otherwise execution will enter the if condition and check for 'expression 1'. Then if the 'expression 1' is true or returns true, then the 'statement-block1' will be executed otherwise 'statement-block2' will be executed.</p><p>Example:</p><p>void main( )</p><p>{</p><p>    int a,b,c;</p><p>    cout << \"enter 3 number\";</p><p>    cin >> a >> b >> c;</p><p>    if(a > b)</p><p>    {</p><p>        if( a > c)</p>",
            "<b>else-if Ladder</b> - <p>The general form of else-if ladder is,</p><p>if(expression 1)</p><p>{</p><p>    statement-block1;</p><p>}</p><p>else if(expression 2) </p><p>{</p><p>    statement-block2;</p><p>}</p><p>else if(expression 3 ) </p><p>{</p><p>    statement-block3;</p><p>}</p><p>else </p><p>    default-statement;</p><p>The expression is tested from the top(of the ladder) downwards. As soon as the true condition is found, the statement associated with it is executed.</p><p>Example:</p><p>void main( )</p><p>{</p><p>    int a;</p><p>    cout << \"enter a number\";</p><p>    cin >> a;</p><p>    if( a%5==0 && a%8==0)</p><p>    {</p><p>        cout << \"divisible by both 5 and 8\";</p><p>    }</p><p>    else if( a%8==0 )</p><p>    {</p><p>        cout << \"divisible by 8\";</p><p>    }</p><p>    else if(a%5==0)</p><p>    {</p><p>        cout << \"divisible by 5\";</p><p>    }</p><p>    else </p><p>    {</p><p>        cout << \"divisible by none\";</p><p>    }</p><p>}</p><p>If you enter value 40 for the variable a, then the output will be:</p><p>Output :-</p><p>divisible by both 5 and 8</p>",
            "<b>Points to Remember</b> - <p>1. In if statement, a single statement can be included without enclosing it into curly braces { }.</p><p>int a = 5;</p><p>if(a > 4)</p><p>    cout << \"success\";</p><p>Output :-</p><p>success</p><p>No curly braces are required in the above case, but if we have more than one statement inside if condition, then we must enclose them inside curly braces otherwise only the first statement after the if condition will be considered.</p><p>int a = 2;</p><p>if(a > 4)</p><p>    cout << \"success\";</p><p>    // below statement is outside the if condition</p><p>    cout << \"Not inside the if condition\"</p><p>Output :-</p><p>Not inside the if condition</p><p>2. == must be used for comparison in the expression of if condition, if you use = the expression will always return true, because it performs assignment not comparison.</p><p>3. Other than 0(zero), all other positive numeric values are considered as true.</p><p>if(27)</p><p>cout << \"hello\";</p><p>hello</p>"
         ]
      },
	  {
         "id":"9",
         "nameOfTopic":"C++ Loops - while, for and do while loop",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "In any programming language, loops are used to execute a set of statements repeatedly until a particular condition is satisfied."
         ],
         "imageUrl":"concept-9.jpg",
         "content":[
			"A sequence of statement is executed until a specified condition is true. This sequence of statement to be executed is kept inside the curly braces { } known as loop body. After every execution of loop body, condition is checked, and if it is found to be true the loop body is executed again. When condition check comes out to be false, the loop body will not be executed.",
			"<b>There are 3 type of loops in C++ language</b> - <p>1. while loop</p><p>2. for loop</p><p>3. do-while loop</p>",
			"<b>while loop</b> - <p>while loop can be address as an entry control loop. It is completed in 3 steps.</p><p>* Variable initialization.(e.g int x=0;)</p><p>* condition(e.g while( x<=10))</p><p>* Variable increment or decrement (x++ or x-- or x=x+2)</p><p>Syntax:</p><p>variable initialization;</p><p>while (condition)</p><p>{</p><p>    statements;</p><p>    variable increment or decrement; </p><p>}</p>",
			"<b>for loop</b> - <p>for loop is used to execute a set of statement repeatedly until a particular condition is satisfied. we can say it an open ended loop. General format is,</p><p>for(initialization; condition; increment/decrement)</p><p>{</p><p>    statement-block;</p><p>}</p><p>In for loop we have exactly two semicolons, one after initialization and second after condition. In this loop we can have more than one initialization or increment/decrement, separated using comma operator. for loop can have only one condition.</p>",
			"<b>Nested for loop</b> - <p>We can also have nested for loop, i.e one for loop inside another for loop. Basic syntax is,</p><p>for(initialization; condition; increment/decrement)</p><p>{</p><p>    for(initialization; condition; increment/decrement)</p><p>    {</p><p>        statement;</p><p>    }</p><p>}</p>",
			"<b>do...while loop</b> - <p>In some situations it is necessary to execute body of the loop before testing the condition. Such situations can be handled with the help of do-while loop. do statement evaluates the body of the loop first and at the end, the condition is checked using while statement. General format of do-while loop is,</p><p>do</p><p>{</p><p>    // a couple of statements</p><p>}</p><p>while(condition);</p>",
			"<b>Jumping out of a loop</b> - <p>Sometimes, while executing a loop, it becomes necessary to skip a part of the loop or to leave the loop as soon as certain condition becocmes true, that is jump out of loop. C language allows jumping from one statement to another within a loop as well as jumping out of the loop.</p><p><b>1. break statement</b></p><p>When break statement is encountered inside a loop, the loop is immediately exited and the program continues with the statement immediately following the loop.</p><p><b>2. continue statement</b></p><p>It causes the control to go directly to the test-condition and then continue the loop process. On encountering continue, cursor leave the current cycle of loop, and starts with the next cycle.</p>"
			]
      },
	  {
         "id":"10",
         "nameOfTopic":"Storage Classes in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Storage classes are used to specify the lifetime and scope of variables. How storage is allocated for variables and How variable is treated by complier depends on these storage classes."
         ],
         "imageUrl":"concept-10.jpg",
         "content":[
			"These are basically divided into 5 different types:- <p>1. Global variables</p><p>2. Local variables</p><p>3. Register variables</p><p>4. Static variables</p><p>5. Extern variables</p>",
			"<b>Global Variables</b> - <p>These are defined at the starting , before all function bodies and are available throughout the program.</p><p>using namespace std;</p><p>int globe;      // Global variable</p><p>void func();</p><p>int main()</p><p>{</p><p>   .....  </p><p>}</p>",
			"<b>Local variables</b> - <p>They are defined and are available within a particular scope. They are also called Automatic variable because they come into being when scope is entered and automatically go away when the scope ends.</p><p>The keyword auto is used, but by default all local variables are auto, so we don't have to explicitly add keyword auto before variable dedaration. Default value of such variable is garbage.</p>",
			"<b>Register variables</b> - <p>This is also a type of local variable. This keyword is used to tell the compiler to make access to this variable as fast as possible. Variables are stored in registers to increase the access speed.</p><p>But you can never use or compute address of register variable and also , a register variable can be declared only within a block, that means, you cannot have global or static register variables.</p>",
			"<b>Static Variables</b> - <p>Static variables are the variables which are initialized & allocated storage only once at the beginning of program execution, no matter how many times they are used and called in the program.</p>",
			"<b>Extern Variables</b> - <p>This keyword is used to access variable in a file which is declared & defined in some other file, that is the existence of a global variable in one file is declared using extern keyword in another file.</p>"
			]
      },
	  {
         "id":"11",
         "nameOfTopic":"Functions in C++",
         "noOfLike":0,
         "noOfDisLike":0,
         "description":[
            "Functions are used to provide modularity to a program. Creating an application using function makes it easier to understand, edit, check errors etc."
         ],
         "imageUrl":"concept-11.jpg",
         "content":[
			"<b>Basic Syntax for using Functions in C++</b> - <p>Here is how you define a function in C++,</p><p>return-type function-name(parameter1, parameter2, ...)</p><p>{</p><p>    // function-body</p><p>}</p><p>* <b>return-type:</b> suggests what the function will return. It can be int, char, some pointer or even a class object. There can be functions which does not return anything, they are mentioned with <b>void.</b></p><p>* <b>Function Name:</b> is the name of the function, using the function name it is called.</p><p>* <b>Parameters:</b> are variables to hold values of arguments passed while function is called. A function may or may not contain parameter list.</p><p>// function for adding two values</p><p>void sum(int x, int y)</p><p>{</p><p>    int z;</p><p>    z = x + y;</p><p>    cout << z;</p><p>}</p><p></p><p>int main()</p><p>{</p><p>    int a = 10;</p><p>    int b = 20;</p><p>    // calling the function with name 'sum'</p><p>    sum (a, b);</p><p>}</p><p>Here, a and b are two variables which are sent as arguments to the function sum, and x and y are parameters which will hold values of a and b to perform the required operation inside the function.</p><p>* <b>Function body:</b> is the part where the code statements are written.</p>",
			"<b>Declaring, Defining and Calling a Function</b> - <p>Function declaration, is done to tell the compiler about the existence of the function. Function's return type, its name & parameter list is mentioned. Function body is written in its definition. Lets understand this with help of an example.</p><p>#include < iostream></p><p>using namespace std;</p><p></p><p>//declaring the function</p><p>int sum (int x, int y);</p><p></p><p>int main()</p><p>{</p><p>    int a = 10;</p><p>    int b = 20;</p><p>    int c = sum (a, b);    //calling the function</p><p>    cout << c;</p><p>}</p><p></p><p>//defining the function</p><p>int sum (int x, int y)</p><p>{</p><p>    return (x + y);</p><p>}</p><p>Here, initially the function is declared, without body. Then inside main() function it is called, as the function returns sumation of two values, and variable c is there to store the result. Then, at last, function is defined, where the body of function is specified. We can also, declare & define the function together, but then it should be done before it is called.</p>",
			"<b>Calling a Function</b> - <p>Functions are called by their names. If the function is without argument, it can be called directly using its name. But for functions with arguments, we have two ways to call them,</p><p>1. Call by Value</p><p>2. Call by Reference</p><p><b>Call by Value</b> => </p><p>In this calling technique we pass the values of arguments which are stored or copied into the formal parameters of functions. Hence, the original values are unchanged only the parameters inside function changes.</p><p></p><p>void calc(int x);</p><p></p><p>int main()</p><p>{</p><p>    int x = 10;</p><p>    calc(x);</p><p>    printf(\"%d\", x);</p><p>}</p><p>void calc(int x)</p><p>{</p><p>    x = x + 10 ;</p><p>}</p><p></p><p>Output :-</p><p>10</p><p>In this case the actual variable x is not changed, because we pass argument by value, hence a copy of x is passed, which is changed, and that copied value is destroyed as the function ends(goes out of scope). So the variable x inside main() still has a value 10.</p><p>But we can change this program to modify the original x, by making the function calc() return a value, and storing that value in x.</p><p></p><p>void calc(int x);</p><p></p><p>int main()</p><p>{</p><p>    int x = 10;</p><p>    x = calc(x);</p><p>    printf(\"%d\", x);</p><p>}</p><p>void calc(int x)</p><p>{</p><p>    x = x + 10 ;</p><p>}</p><p></p><p>Output :-</p><p>20</p><p></p><p><b>Call by Reference</b> => </p><p>In this we pass the address of the variable as arguments. In this case the formal parameter can be taken as a reference or a pointer, in both the case they will change the values of the original variable.</p><p></p><p>void calc(int *p);</p><p></p><p>int main()</p><p>{</p><p>    int x = 10;</p><p>    calc(&x);     // passing address of x as argument</p><p>    printf(\"%d\", x);</p><p>}</p><p></p><p>void calc(int *p)</p><p>{</p><p>    *p = *p + 10;</p><p>}</p><p>Output :-</p><p>20</p>"
			]
      }
   ],
   "programs":[
      {
         "id":"14",
         "nameOfTopic":"Program to find Greatest of a Three Numbers in C++",
         "noOfLike":4,
         "noOfDisLike":1,
         "description":[
            "Below is a simple program to find Greatest of a Three Numbers in C++"
         ],
         "content":[
            "#include <stdio.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "float n1, n2, n3;",
            "cout << \"Enter three numbers: \";",
            "cin >> n1 >> n2 >> n3;",
            "if (n1 >= n2 && n1 >= n3)",
            "{",
            "cout << \"Largest number: \" << n1;",
            "}",
            "if(n2 >= n1 && n2 >= n3)",
            "{",
            "cout << \"Largest number: \" << n2;",
            "}",
            "if(n3 >= n1 && n3 >= n2)",
            "{",
            "cout << \"Largest number: \" << n3;",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter three numbers: 34 45 56",
            "Largest number: 56"
         ]
      },
      {
         "id":"13",
         "nameOfTopic":"Program to find Divisor of a Number in C++",
         "noOfLike":1,
         "noOfDisLike":14,
         "description":[
            "Below is a simple program to find divisor of a given number."
         ],
         "content":[
            "#include <stdio.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "int i, n1;",
            "clrscr();",
            "cout<<\"Enter the number to find it's divisors : \" ;",
            "cin>>n1;",
            "cout<<\"\nThe divisors are :\n\") ;",
            "for(i = 1 ; i <= n1 ; i++)",
            "   if(n1 % i == 0)",
            "     cout<<\"\t\"<<i ;",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter the number to find it's divisors : 21",
            "The divisors are :",
            "1 3 7 21"
         ]
      },
      {
         "id":"1",
         "nameOfTopic":"Hello World Program",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to print hello world."
         ],
         "content":[
            "//Importing header files",
            "#include<stdio.h>",
            "#include<conio.h>",
            "//main method",
            "int main()",
            "{",
            "//Generating output",
            "cout<<\"Hello World.\";",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Hello World."
         ]
      },
      {
         "id":"2",
         "nameOfTopic":"Addition of 2 numbers",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to add two numbers."
         ],
         "content":[
            "//importing header files",
            "#include<iostream.h>",
            "#include<conio.h>",
            "//main method",
            "int main()",
            "{",
            "//declaring and initializing variable",
            "int num1=10 , num2=5 , sum;",
            "//clearing output screen",
            "clrscr();",
            "//logic",
            "sum=num1+num2;",
            "//generating output",
            "cout<<\"Sum of \"<<num1<<",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Sum is: 15"
         ]
      },
      {
         "id":"3",
         "nameOfTopic":"Print User Value",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to display/print user value."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "//main method",
            "int main ()",
            "{",
            "//declaring variable",
            "int value;",
            "//clearing output screen",
            "clrscr();",
            "//output prompt",
            "cout<<\"Enter any value: \";",
            "//getting input from user",
            "cin>>value;",
            "//generating output",
            "cout<<\"Entered value is :\"<<value;",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter any value : 10",
            "Entered value is : 10"
         ]
      },
      {
         "id":"4",
         "nameOfTopic":"Find Quotient and Remainder",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find quotient and remainder."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "int dividend,divisor,remainder;",
            "double quotient;",
            "cout<<\"enter a dividend\"<<endl;",
            "cin>>dividend;",
            "cout<<\"enter a divisor\"<<endl;",
            "cin>>divisor;",
            "quotient=dividend/divisor;",
            "remainder=dividend%divisor;",
            "cout<<\"quotient calculated: \"<<quotient<<endl;",
            "cout<<\"remainder calculated: \"<<remainder<<endl;",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a dividend: 18",
            "Enter a divisor: 6",
            "The quotient calculated:  3",
            "The remainder calculated: 0"
         ]
      },
      {
         "id":"5",
         "nameOfTopic":"Swap two values",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to swap two values."
         ],
         "content":[
            "#include <iostream>",
            "#include<conio.h>",
            "int main()",
            "{",
            "//declaring and initializing variables",
            "int a = 1, b = 2, temp;",
            "cout << \"Before swapping.\" << endl;",
            "cout << \"a = \" << a << \", b = \" << b << endl;",
            "//logic",
            "temp = a;",
            "a = b;",
            "b = temp;",
            "cout << \"After swapping.\" << endl;",
            "cout << \"a = \" << a << \", b = \" << b ;",
            "return 0;",
            "}"
         ],
         "output":[
            "Before swapping.",
            "a = 1 , b = 2",
            "After swapping.",
            "a = 2, b = 1"
         ]
      },
      {
         "id":"6",
         "nameOfTopic":"Check whether number is even or odd.",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to check whether number is even or odd."
         ],
         "content":[
            "#include <iostream>",
            "#include<conio.h>",
            "int main()",
            "{",
            "int num;",
            "cout << \"Enter any value: \";",
            "cin >> num;",
            "//logic",
            "if ( num % 2 == 0)",
            "cout << num << \" is even.\";",
            "else",
            "cout << num << \" is odd.\";",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter any value: 23",
            "23 is odd."
         ]
      },
      {
         "id":"7",
         "nameOfTopic":" Find Roots of a Quadratic Equation",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find Roots of a Quadratic Equation "
         ],
         "content":[
            "//importing header files",
            "#include<conio.h>",
            "#include<math.h>",
            "int main()",
            "{",
            "clrscr();",
            "//declaring variables",
            "int a,b,c;",
            "double x1,x2,disc,real,imag;",
            "cout<<\"Enter coeff of a,b,c:\";",
            "cin>>a>>b>>c;",
            "//logic",
            "if(a==0)",
            "{",
            "cout<<\"This is not a quadratic equation!!\";",
            "}",
            "else",
            "{",
            "disc=b*b-(4*a*c);",
            "if(disc>0)",
            "{",
            "x1=(-b+sqrt(disc))/(2*a);",
            "x2=(-b-sqrt(disc))/(2*a);",
            "cout<<\"The Roots are Real and Distinct\"<<endl;",
            "cout<<\"Root1= \"<<x1<<\" and Root2= \"<<x2;",
            "}",
            "else if(disc==0)",
            "{",
            "x1=(-b+sqrt(disc))/(2*a);",
            "cout<<\"The Roots are Real and Same\"<<endl;",
            "cout<<\"Root1= \"<<x1<<\" and Root2= \"<<x1;",
            "}",
            "else",
            "{",
            "real=-b/(2*a);",
            "imag=sqrt(-disc)/(2*a);",
            "cout<<\"The equation does not have Real roots\"<<endl;",
            "cout<<\"Real Part= \"<<real<<\" and Imaginary Part= \"<<imag;",
            "}",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter coeff of a,b,c:",
            "3",
            "8",
            "2",
            "The Roots are Real and Distinct",
            "Root1= -0.279241 and Root2= -2.387426"
         ]
      },
      {
         "id":"8",
         "nameOfTopic":" Sum of Natural Numbers",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find Sum of Natural Numbers "
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "int num,i,sum=0;",
            "cout<<\"Enter any positive integer\";",
            "cin>>num;",
            "if(num<=0)",
            "{",
            "cout<<\"Enter a Valid Positive Non-zero Integer\";",
            "}",
            "else",
            "{",
            "for(i=0;i<=num;i++)",
            "{",
            "sum=sum+i;",
            "}",
            "cout<<\"Sum of \"<<num<<\" Natural numbers is \"<<sum;",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a positive integer: 4",
            "Sum of 4 Natural numbers is 10"
         ]
      },
      {
         "id":"9",
         "nameOfTopic":" Print Multiplication Table of any integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find multiplication table of any integer "
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "num,i,ans;",
            "cout<<\"Enter a positive integer:\";",
            "cin>>num;",
            "if(num<=0)",
            "{",
            "cout<<\"Enter a valid positive integer:\";",
            "}",
            "else",
            "{",
            "for(i=0;i<=10;i++)",
            "{",
            "ans=num*i;",
            "cout<<\" \"<<num<<\" x \"<<i<<\" = \"<<ans<<endl;",
            "}",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a positive integer:",
            "4",
            "4 x 1 =  4;",
            "4 x 2 =  8;",
            "4 x 3 =  12;",
            "4 x 4 =  16;",
            "4 x 5 =  20;",
            "4 x 6 =  24;",
            "4 x 7 =  28;",
            "4 x 8 =  32;",
            "4 x 9 =  36;",
            "4 x 10 = 40;"
         ]
      },
      {
         "id":"10",
         "nameOfTopic":" Find Factorial of a integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find factorial of a positive integer "
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "double num,i,fact=1;",
            "cout<<\"Enter a positive integer: \"<<endl;",
            "cin>>num;",
            "if(num<=0)",
            "{",
            "cout<<\"Enter a non-zero positive integer: \";",
            "}",
            "else",
            "{",
            "for (i=1;i<=num;i++)",
            "{",
            "fact=fact*i;",
            "}",
            "cout<<\"Factorial calulated: \"<<fact;",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a positive integer:",
            "4",
            "Factorial calulated: 24"
         ]
      },
      {
         "id":"11",
         "nameOfTopic":" Display Fibonacci series of an integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to display fibonacci series of a positive integer "
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "//declaring and initializing variables",
            "double n1=0,n2=1,n3,n,i;",
            "cout<<\"Enter a positive integer: \";",
            "cin>>n;",
            "if(n>0)",
            "{",
            "cout<<\"Fibonacci series: \"<<endl;",
            "//printing 0 1 to start fibonacci",
            "cout<<n1<<\"  \"<<n2;",
            "//as we have printed out 0 and 1 , loop starts with 2",
            "for(i=2;i<n;i++)",
            "{",
            "n3=n1+n2;",
            "cout<<\"  \"<<n3<<\" \";",
            "n1=n2;",
            "n2=n3;",
            "}",
            "}",
            "else",
            "{",
            "cout<<\"Enter a positive non-zero integer.\";",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a positive integer:",
            "10",
            "Fibonacci series:",
            "0 1 1 2 3 5 8 13 21 34"
         ]
      },
      {
         "id":"12",
         "nameOfTopic":" LCM of two integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find LCM of two integers "
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "int num1, num2, max;",
            "cout << \"Enter any two numbers: \";",
            "cin >> num1 >> num2;",
            "// maximum value between num1 and num2 is stored in max",
            "//ternary operator used",
            "max = (num1 > num2) ? num1 : num2;",
            "//logic",
            "do",
            "{",
            "if (max % num1 == 0 && max % num2 == 0)",
            "{",
            "cout << \"LCM = \" << max;",
            "break;",
            "}",
            "else",
            "{",
            "max++;",
            "}",
            "}",
            "while (true);",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter any two numbers:",
            "3",
            "4",
            "LCM = 12"
         ]
      },
      {
         "id":"15",
         "nameOfTopic":" Reversing an integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to reverse an integer "
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "int remainder;",
            " double num ,revNumber = 0;",
            "cout << \"Enter an integer: \";",
            "cin >> num;",
            "while(num != 0)",
            "{",
            "remainder = num%10;",
            "revNumber = (revNumber*10) + remainder;",
            "num =num/10;",
            "}",
            "cout << \"Reversed Number = \" << revNumber;",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter an integer:",
            "124",
            "Reversed Number = 421"
         ]
      },
      {
         "id":"16",
         "nameOfTopic":" Calculating power of an integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to calculate power of an integer"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "#include <math.h>",
            "int main()",
            "{",
            "clrscr();",
            "double base, exp, ans;",
            "cout << \"Enter base: \";",
            "cin >> base;",
            "cout<<\"Enter power: \";",
            "cin>> exp;",
            "//pow is power function and its attributes are base and exponent resp.",
            "ans = pow(base, exp);",
            "cout << base << \"^\" << exp << \" = \" << ans;",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter base:",
            "2",
            "Enter power:",
            "3",
            "2^3=8"
         ]
      },
      {
         "id":"17",
         "nameOfTopic":" Print ASCII value of a character",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to print ASCII value of a character"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "char value;",
            "cout << \"Enter a character: \";",
            "cin >> value;",
            "//When we explicitly print the integer value of a char type, it's ASCII value is printed",
            "cout << \"ASCII Value of \" << value << \" is \" << int(value);",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a character:",
            "c",
            "ASCII Value of c is 99"
         ]
      },
      {
         "id":"18",
         "nameOfTopic":" Find whether number is Palimdrome or not.",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find whether number is palindrome i.e the reversed int is same as default int"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "int num1, num2, digit, rev = 0;",
            "cout << \"Enter a positive number: \";",
            "cin >> num2;",
            "num1 = num2;",
            "do",
            "{",
            "digit = num2 % 10;",
            "rev = (rev * 10) + digit;",
            "num2 = num2 / 10;",
            "}",
            "while (num2 != 0);",
            "cout << \" The reverse of the number is: \" << rev << endl;",
            "if (num1 == rev)",
            "{",
            "cout << \" The number is a palindrome.\";",
            "}",
            "else",
            "{",
            "cout << \" The number is not a palindrome.\";",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a positive number:",
            "12421",
            "The reverse of the number is: 12421",
            "The number is a palindrome."
         ]
      },
      {
         "id":"19",
         "nameOfTopic":" Find whether number is Armstrong or not.",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find whether number is armstrong i.e an integer such that the sum of the cubes of its digits is equal to the number itself."
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "#include<math.h>",
            "int main()",
            "{",
            "int num, originalNum, remainder, counter = 0, result = 0, power;",
            "cout<<\"Enter any value: \";",
            "cin>>num;",
            "originalNum = num;",
            "while (originalNum != 0)",
            "{",
            "originalNum = originalNum/10;",
            "counter++;",
            "}",
            "originalNum = num;",
            "while (originalNum != 0)",
            "{",
            "remainder = originalNum % 10;",
            "// pow() returns a double value",
            "// round() returns the equivalent int",
            "power = round(pow(remainder, counter));",
            "result =result+power;",
            "originalNum =originalNum/10;",
            "}",
            "if (result == num)",
            "{",
            "cout << num << \" is an Armstrong number.\";",
            "}",
            "else",
            "{",
            "cout << num << \" is not an Armstrong number.\";",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter any value:",
            "407",
            "407 is an Armstrong number."
         ]
      },
      {
         "id":"20",
         "nameOfTopic":" Find factors of an integer",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to find factors of an integer"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "clrscr();",
            "int num, i;",
            "cout << \"Enter a positive integer: \";",
            "cin >> num;",
            "cout << \"Factors of \" << num << \" are: \" << endl;",
            "for(i = 1; i <= num; ++i)",
            "{",
            "if(num % i == 0)",
            "cout << i << endl;",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter a positive integer:",
            "20",
            "Factors of 20 are:",
            "1",
            "2",
            "4",
            "5",
            "10",
            "20"
         ]
      },
      {
         "id":"21",
         "nameOfTopic":"  Program to print Pascals triangle",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to print pascals triangle"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "int rows, coef = 1;",
            "cout << \"Enter the number of rows: \";",
            "cin >> rows;",
            "for(int i = 0; i < rows; i++)",
            "{",
            "for(int space = 1; space <= rows-i; space++)",
            "cout <<\"  \";",
            "for(int j = 0; j <= i; j++)",
            "{",
            "if (j == 0 || i == 0)",
            "{",
            "coef = 1;",
            "}",
            "else",
            "{",
            "coef = coef*(i-j+1)/j;",
            "}",
            "cout << coef << \"   \";",
            "}",
            "cout << endl;",
            "}",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter the number of rows:",
            "6",
            "1",
            "1   1",
            "1   2   1",
            "1   3   3    1",
            "1  4    6   4   1",
            "1  5   10   10  5   1"
         ]
      },
      {
         "id":"22",
         "nameOfTopic":"  Program to make a simple calulator using switch statement",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to make a simple calulator using switch statement"
         ],
         "content":[
            "# include <iostream.h>",
            "#include<conio.h>",
            "int main()",
            "{",
            "char operator;",
            "double num1, num2;",
            "cout << \"Enter any arithmetic operator/: \";",
            "cin >> operator;",
            "cout << \"Enter any two values: \";",
            "cin >> num1 >> num2;",
            "switch(operator)",
            "{",
            "case '+':",
            "cout << num1+num2;",
            "break;",
            "case '-':",
            "cout << num1-num2;",
            "break;",
            "case '*':",
            "cout << num1*num2;",
            "break;",
            "case '/':",
            "cout << num1/num2;",
            "break;",
            "default:",
            "// If the operator is other than +, -, * or /, then",
            "cout << \"Error! operator is not correct\";",
            "break;",
            "}",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter any arithmetic operator:",
            "-",
            "Enter any two values:",
            "1.2",
            "1.5",
            "1.2 - 1.5 = -0.3"
         ]
      },
      {
         "id":"23",
         "nameOfTopic":"Program to convert decimal number to binary",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to convert decimal number to binary"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "#include <math.h>",
            "long long convertDecimalToBinary(int);",
            "int main()",
            "{",
            "int num, binaryNumber;",
            "cout << \"Enter a decimal number: \";",
            "cin >> num;",
            "binaryNumber = convertDecimalToBinary(num);",
            "cout << num << \" in decimal = \" << binaryNumber << \" in binary\" << endl ;",
            "getch();",
            "return 0;",
            "}",
            "long long convertDecimalToBinary(int num)",
            "{",
            "long long binaryNumber = 0;",
            "int remainder, i = 1, step = 1;",
            "while (num!=0)",
            "{",
            "remainder = num%2;",
            "cout << \"Step \" << step++ << \": \" << num << \"/2, Remainder = \" << remainder << \", Quotient = \" << num/2 << endl;",
            "num /= 2;",
            "binaryNumber += remainder*i;",
            "i *= 10;",
            "}",
            "return binaryNumber;",
            "}"
         ],
         "output":[
            "Enter a decimal number: ",
            "19",
            "Step 1: 19/2, Remainder = 1, Quotient = 9",
            "Step 2: 9/2, Remainder = 1, Quotient = 4",
            "Step 3: 4/2, Remainder = 0, Quotient = 2",
            "Step 4: 2/2, Remainder = 0, Quotient = 1",
            "Step 5: 1/2, Remainder = 1, Quotient = 0",
            "19 in decimal = 10011 in binary"
         ]
      },
	    {
         "id":"24",
         "nameOfTopic":"Program for a Function in C++",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program  for a Function in C++"
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "// Simple Function",
            "void printmessage ()",
            "{",
            "cout << \\“I am a Function In C++\\”;",
            "}",
            "int main() {",
            "printmessage ();",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "I am a Function in C++"
         ]
      },
      {
         "id":"25",
         "nameOfTopic":"Program to reverse entered string",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program to reverse entered string"
         ],
         "content":[
            "#include <iostream.h>",
            "#include<conio.h>",
            "void reverse(const string& a);",
            "int main()",
            "{",
            "string str;",
            "cout << \" Enter a string: \" << endl;",
            "getline(cin, str);",
            "cout<<\" Reversed String:\"<<endl;",
            "reverse(str);",
            "getch();",
            "return 0;",
            "}",
            "void reverse(const string& str)",
            "{",
            "size_t numOfChars = str.size();",
            "if(numOfChars == 1)",
            "cout << str << endl;",
            "else",
            "{",
            "cout << str[numOfChars - 1];",
            "reverse(str.substr(0, numOfChars - 1));",
            "}",
            "}"
         ],
         "output":[
            "Enter a string:",
            "hello world",
            "Reversed String:",
            "dlrow olleh"
         ]
      },
      {
         "id":"26",
         "nameOfTopic":"Program for Parameterized Constructor In C++",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple program for Parameterized Constructor In C++"
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "class Example",
            "{",
            "// Variable Declaration",
            "int a,b;",
            "public:",
            "//Constructor",
            "Example(int x,int y)",
            "{",
            "// Assign Values In Constructor",
            "a=x;",
            "b=y;",
            "cout<<\\“Im Constructor\n\\”;",
            "}",
            "void Display()",
            "{",
            "cout<<\\“Values :\\”<<a<<\\”\t\\”<<b;",
            "}",
            "};",
            "int main()",
            "{",
            "Example Object(10,20);",
            "// Constructor invoked.",
            "Object.Display();",
            "// Wait For Output Screen",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Im Constructor",
            "Values :10 20"
         ]
      },
      {
         "id":"27",
         "nameOfTopic":"Program For Constructor Overloading In C++",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program For Constructor Overloading In C++"
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "class Example {",
            "// Variable Declaration",
            "int a,b;",
            "public:",
            "//Constructor wuithout Argument",
            "Example() {",
            "// Assign Values In Constructor",
            "a=50;",
            "b=100;",
            "cout<<\\”\nIm Constructor\\”;",
            "}",
            "//Constructor with Argument",
            "Example(int x,int y) {",
            "// Assign Values In Constructor",
            "a=x;",
            "b=y;",
            "cout<<\\”\nIm Constructor\\”;",
            "}",
            "void Display() {",
            "cout<<\\”\nValues :\\”<<a<<\\”\t\\”<<b;",
            "}",
            "};",
            "int main() {",
            "Example Object(10,20);",
            "Example Object2;",
            "// Constructor invoked.",
            "Object.Display();",
            "Object2.Display();",
            "// Wait For Output Screen",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Im Constructor",
            "Im Constructor",
            "Values :10 20",
            "Values :50 100"
         ]
      },
      {
         "id":"28",
         "nameOfTopic":"Program to find prime numbers below entered value",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program to find prime numbers below entered value"
         ],
         "content":[
            "#include<iostream>",
            "#include<conio.h>",
            "#include<math.h> // Math.h For sqrt function",
            "using namespace std;",
            "int main()",
            "{",
            "// Variable Declaration",
            "int n;",
            "// Get Input Value",
            "cout<<\\“Enter the Number :\\”;",
            "cin>>n;",
            "cout<<\\“List Of Prime Numbers Below \\“<<n<<endl;",
            "//for Loop Block For Find Prime Number",
            "for (int i=2; i<n; i++)",
            "for (int j=2; j*j<=i; j++)",
            "{",
            "if (i % j == 0)",
            "break;",
            "else if (j+1 > sqrt(i)) {",
            "cout << i << endl;",
            "}",
            "}",
            "// Wait For Output Screen",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Enter the Number :50",
            "List Of Prime Numbers Below 50",
            "5",
            "7",
            "11",
            "13",
            "17",
            "19",
            "23",
            "29",
            "31",
            "37",
            "41",
            "43",
            "47"
         ]
      },
      {
         "id":"29",
         "nameOfTopic":"Program for Function to Find Smallest Number",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Function to Find Smallest Number"
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "using namespace std;",
            "// Simple Function",
            "int compare( int a, int b )",
            "{",
            "return (a+4 < b)? a : b;",
            "}",
            "int main() {",
            "cout<<\\”\nSmallest Number :\\”<<compare(1,10);",
            "cout<<\\”\nSmallest Number :\\”<<compare(31,10);",
            "cout<<\\”\nSmallest Number :\\”<<compare(11,8);",
            "getch();",
            "return 0;",
            "}"
         ],
         "output":[
            "Smallest Number :1",
            "Smallest Number :10",
            "Smallest Number :8"
         ]
      },
      {
         "id":"30",
         "nameOfTopic":"Program for Inline Function",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Inline Function"
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "class line",
            "{",
            "public:",
            "inline float mul(float x,float y)",
            "{",
            "return(x*y);",
            "}",
            "inline float cube(float x)",
            "{",
            "return(x*x*x);",
            "}",
            "};",
            "void main()",
            "{",
            "line obj;",
            "float val1,val2;",
            "clrscr();",
            "cout<<\\“Enter two values:\\”;",
            "cin>>val1>>val2;",
            "cout<<\\”\nMultiplication value is:\\”<<obj.mul(val1,val2);",
            "cout<<\\”\n\nCube value is :\\”<<obj.cube(val1)<<\\”\t\\”<<obj.cube(val2);",
            "getch();",
            "}"
         ],
         "output":[
            "Enter two values: 5 7",
            "Multiplication Value is: 35",
            "Cube Value is: 25 and 343"
         ]
      },
      {
         "id":"31",
         "nameOfTopic":"Program for Multiple Inheritance to display a students rollno , marks and percantage",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Multiple Inheritance to display a students rollno , marks and percantage",
            "ALGORITHM:(Steps for program)",
            "Step 1: Start the program.",
            "Step 2: Declare the base class student.",
            "Step 3: Declare and define the function get() to get the student details.",
            "Step 4: Declare the other class sports.",
            "Step 5: Declare and define the function getsm() to read the sports mark.",
            "Step 6: Create the class statement derived from student and sports.",
            "Step 7: Declare and define the function display() to find out the total and average.",
            "Step 8: Declare the derived class object,call the functions get(),getsm() and display().",
            "Step 9: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "class student",
            "{",
            "protected:",
            "int rno,m1,m2;",
            "public:",
            "void get()",
            "{",
            "cout<<\\“Enter the Roll no :\\”;",
            "cin>>rno;",
            "cout<<\\“Enter the two marks :\\”;",
            "cin>>m1>>m2;",
            "}",
            "};",
            "class sports",
            "{",
            "protected:",
            "int sm; // sm = Sports mark",
            "public:",
            "void getsm()",
            "{",
            "cout<<\\”\nEnter the sports mark :\\”;",
            "cin>>sm;",
            "}",
            "};",
            "class statement:public student,public sports",
            "{",
            "int tot,avg;",
            "public:",
            "void display()",
            "{",
            "tot=(m1+m2+sm);",
            "avg=tot/3;",
            "cout<<\\”\n\n\tRoll No : \\“<<rno<<\\”\n\tTotal : \\“<<tot;",
            "cout<<\\”\n\tAverage : \\“<<avg;",
            "}",
            "};",
            "void main()",
            "{",
            "clrscr();",
            "statement obj;",
            "obj.get();",
            "obj.getsm();",
            "obj.display();",
            "getch();",
            "}"
         ],
         "output":[
            "Enter the Roll no: 100",
            "Enter two marks",
            "90",
            "80",
            "Enter the Sports Mark: 90",
            "Roll No: 100",
            "Total : 260",
            "Average: 86.66"
         ]
      },
      {
         "id":"32",
         "nameOfTopic":"Program for Function Template to Swap",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Function Template to Swap",
            "ALGORITHM:",
            "STEP 1: Start the program.",
            "STEP 2: Declare the template class.",
            "STEP 3: Declare and define the functions to swap the values.",
            "STEP 4: Declare and define the functions to get the values.",
            "STEP 5: Read the values and call the corresponding functions.",
            "STEP6: Display the results.",
            "STEP 7: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "template<class t>",
            "void swap(t &x,t &y)",
            "{",
            "t temp=x;",
            "x=y;",
            "y=temp;",
            "}",
            "void fun(int a,int b,float c,float d)",
            "{",
            "cout<<\\”\na and b before swaping :\\”<<a<<\\”\t\\”<<b;",
            "swap(a,b);",
            "cout<<\\”\na and b after swaping :\\”<<a<<\\”\t\\”<<b;",
            "cout<<\\”\n\nc and d before swaping :\\”<<c<<\\”\t\\”<<d;",
            "swap(c,d);",
            "cout<<\\”\nc and d after swaping :\\”<<c<<\\”\t\\”<<d;",
            "}",
            "void main()",
            "{",
            "int a,b;",
            "float c,d;",
            "clrscr();",
            "cout<<\\“Enter A,B values(integer):\\”;",
            "cin>>a>>b;",
            "cout<<\\“Enter C,D values(float):\\”;",
            "cin>>c>>d;",
            "fun(a,b,c,d);",
            "getch();",
            "}"
         ],
         "output":[
            "Enter A, B values (integer): 10 20",
            "Enter C, D values (float): 2.50 10.80",
            "A and B before swapping: 10 20",
            "A and B after swapping: 20 10",
            "C and D before swapping: 2.50 10.80",
            "C and D after swapping: 10.80 2.50"
         ]
      },
      {
         "id":"33",
         "nameOfTopic":"Program for Function Overloading to display attributes of shapes.",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Function Overloading to display attributes of shapes.",
            "ALGORITHM:",
            "STEP 1: Start the program.",
            "STEP 2: Declare the class name as fn with data members and member functions.",
            "STEP 3: Read the choice from the user.",
            "STEP 4: Choice=1 then go to the step 5.",
            "STEP 5: The function area() to find area of circle with one integer argument.",
            "STEP 6: Choice=2 then go to the step 7.",
            "STEP 7: The function area() to find area of rectangle with two integer argument.",
            "STEP 8: Choice=3 then go to the step 9.",
            "STEP 9: The function area() to find area of triangle with three arguments, two as Integer",
            "and one as float.",
            "STEP 10: Choice=4 then stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<stdlib.h>",
            "#include<conio.h>",
            "#define pi 3.14",
            "class fn",
            "{",
            "public:",
            "void area(int); //circle",
            "void area(int,int); //rectangle",
            "void area(float ,int,int); //triangle",
            "};",
            "void fn::area(int a)",
            "{",
            "cout<<\\“Area of Circle:\\”<<pi*a*a;",
            "}",
            "void fn::area(int a,int b)",
            "{",
            "cout<<\\“Area of rectangle:\\”<<a*b;",
            "}",
            "void fn::area(float t,int a,int b)",
            "{",
            "cout<<\\“Area of triangle:\\”<<t*a*b;",
            "}",
            "void main()",
            "{",
            "int ch;",
            "int a,b,r;",
            "clrscr();",
            "fn obj;",
            "cout<<\\”\n\t\tFunction Overloading\\”;",
            "cout<<\\”\n1.Area of Circle\n2.Area of Rectangle\n3.Area of Triangle\n4.Exit\n:\\”;",
            "cout<<\\”Enter your Choice:\\”;",
            "cin>>ch;",
            "switch(ch)",
            "{",
            "case 1:",
            "cout<<\\“Enter Radious of the Circle:\\”;",
            "cin>>r;",
            "obj.area(r);",
            "break;",
            "case 2:",
            "cout<<\\“Enter Sides of the Rectangle:\\”;",
            "cin>>a>>b;",
            "obj.area(a,b);",
            "break;",
            "case 3:",
            "cout<<\\“Enter Sides of the Triangle:\\”;",
            "cin>>a>>b;",
            "obj.area(0.5,a,b);",
            "break;",
            "case 4:",
            "exit(0);",
            "}",
            "getch();",
            "}"
         ],
         "output":[
            "Function Overloading",
            "1. Area of Circle",
            "2. Area of Rectangle",
            "3. Area of Triangle",
            "4. Exit",
            "Enter Your Choice: 2",
            "Enter the Sides of the Rectangle: 5 5",
            "Area of Rectangle is: 25",
            "1. Area of Circle",
            "2. Area of Rectangle",
            "3. Area of Triangle",
            "4. Exit",
            "Enter Your Choice: 4"
         ]
      },
      {
         "id":"34",
         "nameOfTopic":"Program for Friend Function to calculate Mean of Two Numbers",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Friend Function to calculate Mean of Two Numbers",
            "ALGORITHM:",
            "STEP 1: Start the program.",
            "STEP 2: Declare the class name as Base with data members and member functions.",
            "STEP 3: The function get() is used to read the 2 inputs from the user.",
            "STEP 4: Declare the friend function mean(base ob) inside the class.",
            "STEP 5: Outside the class to define the friend function and do the following.",
            "STEP 6: Return the mean value (ob.val1+ob.val2)/2 as a float.",
            "STEP 7: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "class base",
            "{",
            "int val1,val2;",
            "public:",
            "void get()",
            "{",
            "cout<<\\“Enter two values:\\”;",
            "cin>>val1>>val2;",
            "}",
            "friend float mean(base ob);",
            "};",
            "float mean(base ob)",
            "{",
            "return float(ob.val1+ob.val2)/2;",
            "}",
            "void main()",
            "{",
            "clrscr();",
            "base obj;",
            "obj.get();",
            "cout<<\\”\n Mean value is : \\“<<mean(obj);",
            "getch();",
            "}"
         ],
         "output":[
            "Enter two values: 10, 20",
            "Mean Value is: 15"
         ]
      },
      {
         "id":"35",
         "nameOfTopic":"Program for Exception Handling with Multiple Catch",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Exception Handling with Multiple Catch",
            "ALGORITHM:",
            "Step 1: Start the program.",
            "Step 2: Declare and define the function test().",
            "Step 3: Within the try block check whether the value is greater than zero or not.",
            "a. if the value greater than zero throw the value and catch the corresponding exception.",
            "b. Otherwise throw the character and catch the corresponding exception.",
            "Step 4: Read the integer and character values for the function test().",
            "Step 5: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "void test(int x)",
            "{",
            "try",
            "{",
            "if(x>0)",
            "throw x;",
            "else",
            "throw ‘x’;",
            "}",
            "catch(int x)",
            "{",
            "cout<<\\“Catch a integer and that integer is:\\”<<x;",
            "}",
            "catch(char x)",
            "{",
            "cout<<\\“Catch a character and that character is:\\”<<x;",
            "}",
            "}",
            "void main()",
            "{",
            "clrscr();",
            "cout<<\\“Testing multiple catches\n:\\”;",
            "test(10);",
            "test(0);",
            "getch();",
            "}"
         ],
         "output":[
            "Testing multiple catches",
            "Catch a integer and that integer is: 10",
            "Catch a character and that character is: x"
         ]
      },
      {
         "id":"36",
         "nameOfTopic":"Program for Exception Handling Divide by zero",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for Exception Handling Divide by zero",
            "ALGORITHM:",
            "Step 1: Start the program.",
            "Step 2: Declare the variables a,b,c.",
            "Step 3: Read the values a,b,c,.",
            "Step 4: Inside the try block check the condition.",
            "a. if(a-b!=0) then calculate the value of d and display.",
            "b. otherwise throw the exception.",
            "Step 5: Catch the exception and display the appropriate message.",
            "Step 6: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "void main()",
            "{",
            "int a,b,c;",
            "float d;",
            "clrscr();",
            "cout<<\\“Enter the value of a:\\”;",
            "cin>>a;",
            "cout<<\\“Enter the value of b:\\”;",
            "cin>>b;",
            "cout<<\\“Enter the value of c:\\”;",
            "cin>>c;",
            "try",
            "{",
            "if((a-b)!=0)",
            "{",
            "d=c/(a-b);",
            "cout<<\\“Result is:\\”<<d;",
            "}",
            "else",
            "{",
            "throw(a-b);",
            "}",
            "}",
            "catch(int i)",
            "{",
            "cout<<\\“Answer is infinite because a-b is:\\”<<i;",
            "}",
            "getch();",
            "}"
         ],
         "output":[
            "Enter the value for a: 20",
            "Enter the value for b: 20",
            "Enter the value for c: 40",
            "Answer is infinite because a-b is: 0"
         ]
      },
      {
         "id":"37",
         "nameOfTopic":"Program for a Simple Book Entry",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program for a Simple Book Entry"
         ],
         "content":[
            "#include<iostream.h>",
            "#include<stdio.h>",
            "struct books",
            "{",
            "char name[20],author[20];",
            "}a[50];",
            "int main()",
            "{",
            "int i,n;",
            "cout<<\\“No Of Books[less than 50]:\\”;",
            "cin>>n;",
            "cout<<\\“Enter the book details\n\\”;",
            "cout<<\\”–––––––-\n\\”;",
            "for(i=0;i<n;i++)",
            "{",
            "cout<<\\“Details of Book No \\“<<i+1<<\\”\n\\”;",
            "cout<<\\“Book Name :\\”;",
            "cin>>a[i].name;",
            "cout<<\\“Book Author :\\”;",
            "cin>>a[i].author;",
            "cout<<\\”–––––––-\n\\”;",
            "}",
            "cout<<\\”================================================\n\\”;",
            "cout<<\\” S.No\t| Book Name\t|author\n\\”;",
            "cout<<\\”=====================================================\\”;",
            "for(i=0;i<n;i++)",
            "{",
            "cout<<\\”\n \\”<<i+1<<\\”\t|\\”<<a[i].name<<\\”\t| \\“<<a[i].author;",
            "}",
            "cout<<\\”\n=================================================\\”;",
            "return 0;",
            "}"
         ],
         "output":[
            "No Of Books[less than 50]:2",
            "Enter the book details",
            "–––––––-",
            "Details of Book No 1",
            "Book Name :Programming",
            "Book Author :Dromy",
            "Details of Book No 2",
            "Book Name :C",
            "Book Author :Byron",
            "=======================================================",
            "S.No | Book Name |author",
            "=======================================================",
            "1 |Programming | Dromy",
            "2 |C | Byron",
            "======================================================="
         ]
      },
      {
         "id":"38",
         "nameOfTopic":"Program to write a File Operation",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program to write a File Operation",
            "ALGORITHM:",
            "STEP 1: Start the program.",
            "STEP 2: Declare the variables.",
            "STEP 3: Read the file name.",
            "STEP 4: open the file to write the contents.",
            "STEP 5: writing the file contents up to reach a particular condition.",
            "STEP 6: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<stdio.h>",
            "#include<conio.h>",
            "#include<fstream.h>",
            "void main()",
            "{",
            "char c,fname[10];",
            "ofstream out;",
            "cout<<\\“Enter File name:\\”;",
            "cin>>fname;",
            "out.open(fname);",
            "cout<<\\“Enter contents to store in file (Enter # at end):\n\\”;",
            "while((c=getchar())!=’#’)",
            "{",
            "out<<c;",
            "}",
            "out.close();",
            "getch();",
            "}"
         ],
         "output":[
            "Enter File name: one.txt",
            "Enter contents to store in file (enter # at end)",
            "Master of Computer Applications#"
         ]
      },
     
      {
         "id":"39",
         "nameOfTopic":"Program For A Virtual Function",
         "noOfLike":2,
         "noOfDisLike":2,
         "description":[
            "Below is a simple Program For A Virtual Function",
            "ALGORITHM:",
            "Step 1: Start the program.",
            "Step 2: Declare the base class base.",
            "Step 3: Declare and define the virtual function show().",
            "Step 4: Declare and define the function display().",
            "Step 5: Create the derived class from the base class.",
            "Step 6: Declare and define the functions display() and show().",
            "Step 7: Create the base class object and pointer variable.",
            "Step 8: Call the functions display() and show() using the base class object and pointer.",
            "Step 9: Create the derived class object and call the functions display() and show() using",
            "the derived class object and pointer.",
            "Step 10: Stop the program."
         ],
         "content":[
            "#include<iostream.h>",
            "#include<conio.h>",
            "class base",
            "{",
            "public:",
            "virtual void show()",
            "{",
            "cout<<\\”\n Base class show:\\”;",
            "}",
            "void display()",
            "{",
            "cout<<\\”\n Base class display:\\” ;",
            "}",
            "};",
            "class drive:public base",
            "{",
            "public:",
            "void display()",
            "{",
            "cout<<\\”\n Drive class display:\\”;",
            "}",
            "void show()",
            "{",
            "cout<<\\”\n Drive class show:\\”;",
            "}",
            "};",
            "void main()",
            "{",
            "clrscr();",
            "base obj1;",
            "base *p;",
            "cout<<\\”\n\t P points to base:\n\\” ;",
            "p=&obj1;",
            "p->display();",
            "p->show();",
            "cout<<\\”\n\n\t P points to drive:\n\\”;",
            "drive obj2;",
            "p=&obj2;",
            "p->display();",
            "p->show();",
            "getch();",
            "}"
         ],
         "output":[
            "P points to Base",
            "Base class display",
            "Base class show",
            "P points to Drive",
            "Base class Display",
            "Drive class Show"
         ]
      }
   ]
}
